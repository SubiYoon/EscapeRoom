USE escapedb;

DROP TABLE IF EXISTS WISHLIST;
DROP TABLE IF EXISTS REVIEW;
DROP TABLE IF EXISTS IMAGES;
DROP TABLE IF EXISTS `MEMBER`;
DROP TABLE IF EXISTS TEAM;
DROP TABLE IF EXISTS WANTED;
DROP TABLE IF EXISTS THEME;
DROP TABLE IF EXISTS STORE;
DROP TABLE IF EXISTS `ADMIN`;
DROP TABLE IF EXISTS `USER`;
DROP TABLE IF EXISTS QnA;
DROP TABLE IF EXISTS GENRE;
DROP TABLE IF EXISTS SWAP;
DROP TABLE IF EXISTS PAYMENT;
DROP TABLE IF EXISTS RESERVATION;
DROP TABLE IF EXISTS `COMMENT`;


CREATE TABLE GENRE (
genre_code	INT	NOT NULL,
gname	VARCHAR(20)	NULL
);
ALTER TABLE GENRE ADD CONSTRAINT PRIMARY KEY(genre_code);
ALTER TABLE GENRE MODIFY genre_code INT AUTO_INCREMENT;

CREATE TABLE USER (
user_code	INT	NOT NULL,
id	VARCHAR(100)	NOT NULL,
upassword	VARCHAR(100)	NULL,
email	VARCHAR(100)	NOT NULL,
phone	VARCHAR(100)	NOT NULL,
address	VARCHAR(200)	NOT NULL,
ban	VARCHAR(1)	NOT NULL,
birthday	DATE	NULL,
favorite_genre1	INT	NULL,
favorite_genre2	INT	NULL,
favorite_genre3	INT	NULL,
writedate	DATETIME	NOT NULL	DEFAULT NOW()
);
ALTER TABLE USER ADD CONSTRAINT PRIMARY KEY(user_code);
ALTER TABLE USER MODIFY user_code INT AUTO_INCREMENT;
ALTER TABLE USER ADD FOREIGN KEY (favorite_genre1) REFERENCES GENRE (genre_code);
ALTER TABLE USER ADD FOREIGN KEY (favorite_genre2) REFERENCES GENRE (genre_code);
ALTER TABLE USER ADD FOREIGN KEY (favorite_genre3) REFERENCES GENRE (genre_code);

CREATE TABLE ADMIN (
admin_code	INT	NOT NULL,
id	VARCHAR(20)	NULL,
apassword	VARCHAR(20)	NULL,
phone	VARCHAR(20)	NULL,
email	VARCHAR(100)	NULL
);
ALTER TABLE ADMIN ADD CONSTRAINT PRIMARY KEY(admin_code);
ALTER TABLE ADMIN MODIFY admin_code INT AUTO_INCREMENT;


CREATE TABLE STORE (
store_code	INT	NOT NULL,
admin_code	INT	NOT NULL,
sname	VARCHAR(100)	NOT NULL,
phone	VARCHAR(30)	NOT NULL,
address	VARCHAR(100)	NOT NULL,
homepage	VARCHAR(100)	NOT NULL
);
ALTER TABLE STORE ADD CONSTRAINT PRIMARY KEY(store_code);
ALTER TABLE STORE MODIFY store_code INT AUTO_INCREMENT;
ALTER TABLE STORE ADD FOREIGN KEY (admin_code) REFERENCES ADMIN (admin_code);

CREATE TABLE THEME (
theme_code	INT	NOT NULL,
store_code	INT	NOT NULL,
genre_code	INT	NOT NULL,
themetime	INT	NOT NULL,
posting	LONGTEXT	NULL,
number_people	INT	NULL,
themelevel	INT	NULL,
device	VARCHAR(30)	NULL,
activity	VARCHAR(30)	NULL
);
ALTER TABLE THEME ADD CONSTRAINT PRIMARY KEY(theme_code);
ALTER TABLE THEME MODIFY theme_code INT AUTO_INCREMENT;
ALTER TABLE THEME ADD FOREIGN KEY (store_code) REFERENCES STORE (store_code);
ALTER TABLE THEME ADD FOREIGN KEY (genre_code) REFERENCES GENRE (genre_code);

CREATE TABLE WISHLIST (
wishlist_code	INT	NOT NULL,
user_code	INT	NOT NULL,
theme_code	INT	NOT NULL
);
ALTER TABLE WISHLIST ADD CONSTRAINT PRIMARY KEY(wishlist_code);
ALTER TABLE WISHLIST MODIFY wishlist_code INT AUTO_INCREMENT;
ALTER TABLE WISHLIST ADD FOREIGN KEY (theme_code) REFERENCES THEME (theme_code);
ALTER TABLE WISHLIST ADD FOREIGN KEY (user_code) REFERENCES USER (user_code);

CREATE TABLE REVIEW (
review_code	INT	NOT NULL,
user_code	INT	NOT NULL,
theme_code	INT	NOT NULL,
title	VARCHAR(100)	NULL,
posting	LONGTEXT	NULL,
interior	INT	NULL,
story	INT	NULL,
reviewlevel	INT	NULL,
playdate	DATE	NULL,
success	INT	NULL,
hintcount	INT	NULL,
cleartime	INT	NULL,
writedate	DATETIME	NULL	DEFAULT NOW()
);
ALTER TABLE REVIEW ADD CONSTRAINT PRIMARY KEY(review_code);
ALTER TABLE REVIEW MODIFY review_code INT AUTO_INCREMENT;
ALTER TABLE REVIEW ADD FOREIGN KEY (user_code) REFERENCES USER (user_code);
ALTER TABLE REVIEW ADD FOREIGN KEY (theme_code) REFERENCES THEME (theme_code);

CREATE TABLE IMAGES (
images_code	INT	NOT NULL,
store_code	INT	NOT NULL,
review_code	INT	NOT NULL,
theme_code	INT	NOT NULL,
imagesname	VARCHAR(20)	NULL
);
ALTER TABLE IMAGES ADD CONSTRAINT PRIMARY KEY(images_code);
ALTER TABLE IMAGES MODIFY images_code INT AUTO_INCREMENT;
ALTER TABLE IMAGES ADD FOREIGN KEY (store_code) REFERENCES STORE (store_code);
ALTER TABLE IMAGES ADD FOREIGN KEY (review_code) REFERENCES REVIEW (review_code);
ALTER TABLE IMAGES ADD FOREIGN KEY (theme_code) REFERENCES THEME (theme_code);

CREATE TABLE COMMENT (
comment_code	INT	NOT NULL,
comment_code2	INT	NOT NULL,
user_code	INT	NOT NULL,
comment	VARCHAR(100)	NULL,
writedate	DATETIME	NULL	DEFAULT NOW()
);
ALTER TABLE COMMENT ADD CONSTRAINT PRIMARY KEY(comment_code);
ALTER TABLE COMMENT MODIFY comment_code INT AUTO_INCREMENT;
ALTER TABLE COMMENT ADD FOREIGN KEY (comment_code2) REFERENCES COMMENT (comment_code);
ALTER TABLE COMMENT ADD FOREIGN KEY (user_code) REFERENCES USER (user_code);

CREATE TABLE WANTED (
wanted_code	INT	NOT NULL,
user_code	INT	NOT NULL,
theme_code	INT	NOT NULL,
comment_code	INT	NOT NULL,
title	VARCHAR(100)	NULL,
posting	LONGTEXT	NULL,
writedate	DATETIME	NULL	DEFAULT NOW(),
reserved_date	DATE	NOT NULL,
reserved_time	INT	NOT NULL
);
ALTER TABLE WANTED ADD CONSTRAINT PRIMARY KEY(wanted_code);
ALTER TABLE WANTED MODIFY wanted_code INT AUTO_INCREMENT;
ALTER TABLE WANTED ADD FOREIGN KEY (user_code) REFERENCES USER (user_code);
ALTER TABLE WANTED ADD FOREIGN KEY (theme_code) REFERENCES THEME (theme_code);
ALTER TABLE WANTED ADD FOREIGN KEY (comment_code) REFERENCES COMMENT (comment_code);

CREATE TABLE TEAM (
team_code	INT	NOT NULL,
wanted_code	INT	NOT NULL
);
ALTER TABLE TEAM ADD CONSTRAINT PRIMARY KEY(team_code);
ALTER TABLE TEAM MODIFY team_code INT AUTO_INCREMENT;
ALTER TABLE TEAM ADD FOREIGN KEY (wanted_code) REFERENCES WANTED (wanted_code);

CREATE TABLE MEMBER (
member_code	INT	NOT NULL,
user_code	INT	NOT NULL,
team_code	INT	NOT NULL
);
ALTER TABLE MEMBER ADD CONSTRAINT PRIMARY KEY(member_code);
ALTER TABLE MEMBER MODIFY member_code INT AUTO_INCREMENT;
ALTER TABLE MEMBER ADD FOREIGN KEY (user_code) REFERENCES USER (user_code);
ALTER TABLE MEMBER ADD FOREIGN KEY (team_code) REFERENCES TEAM (team_code);

CREATE TABLE QnA (
qna_code	INT	NOT NULL,
user_code	INT	NOT NULL,
store_code	INT	NOT NULL,
title	VARCHAR(100)	NULL,
posting	LONGTEXT	NULL,
writedate	DATETIME	NULL	DEFAULT NOW()
);
ALTER TABLE QnA ADD CONSTRAINT PRIMARY KEY(qna_code);
ALTER TABLE QnA MODIFY qna_code INT AUTO_INCREMENT;
ALTER TABLE QnA ADD FOREIGN KEY (user_code) REFERENCES USER (user_code);
ALTER TABLE QnA ADD FOREIGN KEY (store_code) REFERENCES STORE (store_code);

CREATE TABLE SWAP (
swap_code	INT	NOT NULL,
user_code	INT	NOT NULL,
theme_code	INT	NOT NULL,
reserved_date	DATE	NOT NULL,
reserved_time	INT	NOT NULL
);
ALTER TABLE SWAP ADD CONSTRAINT PRIMARY KEY(swap_code);
ALTER TABLE SWAP MODIFY swap_code INT AUTO_INCREMENT;
ALTER TABLE SWAP ADD FOREIGN KEY (user_code) REFERENCES USER (user_code);
ALTER TABLE SWAP ADD FOREIGN KEY (theme_code) REFERENCES THEME (theme_code);


CREATE TABLE RESERVATION (
reservation_code	INT	NOT NULL,
user_code	INT	NOT NULL,
theme_code	INT	NOT NULL,
rdate	DATETIME	NULL,
rtime	INT	NULL,
price	INT	NULL,
rmember	INT	NULL
);
ALTER TABLE RESERVATION ADD CONSTRAINT PRIMARY KEY(reservation_code);
ALTER TABLE RESERVATION MODIFY reservation_code INT AUTO_INCREMENT;
ALTER TABLE RESERVATION ADD FOREIGN KEY (user_code) REFERENCES USER (user_code);
ALTER TABLE RESERVATION ADD FOREIGN KEY (theme_code) REFERENCES THEME (theme_code);

CREATE TABLE PAYMENT (
payment_code	INT	NOT NULL,
reservation_code	INT	NOT NULL
);
ALTER TABLE PAYMENT ADD CONSTRAINT PRIMARY KEY(payment_code);
ALTER TABLE PAYMENT MODIFY payment_code INT AUTO_INCREMENT;
ALTER TABLE PAYMENT ADD FOREIGN KEY (reservation_code) REFERENCES RESERVATION (reservation_code);